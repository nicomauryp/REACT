{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicom\\\\OneDrive\\\\Escritorio\\\\REACT COURSE\\\\21-PROJECT-BUILDING MULTIPAGE SPA REACT ROUTER\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/nicom/OneDrive/Escritorio/REACT COURSE/21-PROJECT-BUILDING MULTIPAGE SPA REACT ROUTER/frontend/src/pages/Events.js"],"sourcesContent":["import { json, useLoaderData } from \"react-router-dom\";\n\nimport EventsList from \"../components/EventsList\";\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n  const events = data.events;\n\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    return json(\n      { message: \"Could not fetch events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAEtD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;;EAE5B;EACA;EACA;EACA,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAbQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAe,EAAA,GADnBT,UAAU;AAenB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA,OAAOpB,IAAI,CACT;MAAEqB,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}